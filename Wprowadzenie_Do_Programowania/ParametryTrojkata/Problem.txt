Problem: Parametry trójkąta [C#, mono]
Napisz program, który ze standardowego wejścia wczyta trzy liczby określające długości boków pewnego trójkąta. Liczby te są podane w postaci zmiennoprzecinkowej, z dokładnością do dwóch miejsc po przecinku, w jednej linii, oddzielone średnikiem i jedną spacją. Liczby podane są w formacie "en-US" (z kropką dziesiętną).

Następnie, zweryfikuj poprawność danych, w podanej kolejności:

Jeśli którakolwiek z podanych liczb jest niedodatnia, wypisz komunikat Błędne dane. Długości boków muszą być dodatnie! i przerwij działanie programu.
Jeśli z podanych długości boków nie można zbudować trójkąta, wypisz komunikat: Błędne dane. Trójkąta nie można zbudować! i przerwij działanie programu. (UWAGA: dopuszczamy trójkąt, którego boki się pokrywają, o polu zerowym).
Jeśli dane są poprawne, wykonaj obliczenia z dokładnością do 2 miejsc po przecinku i wypisz na standardowe wyjście komunikaty:

obwód = {obwód} - z dokładnością 2 miejsc po przecinku,,
pole = {pole} - z dokładnością 2 miejsc po przecinku
trójkąt jest {typ}, gdzie typ jest jednym z napisów: prostokątny, ostrokątny, rozwartokątny.
W ostatniej linii, jeśli trójkąt jest równoboczny, wypisz komunikat trójkąt równoboczny, zaś jeśli jest równoramienny, wypisz komunikat trójkąt równoramienny.

Przy tworzeniu programu sugeruj się przykładami i wynikami testów.

Podpowiedzi:

Statyczną klasę Math możemy traktować jako bibliotekę funkcji matematycznych. Znajdziesz tam m.in. funkcję Math.Sqrt() obliczającą pierwiastek kwadratowy czy funkcję Math.Round() wykonującą zaokrąglenie do żądanej liczby miejsc po przecinku. Dokumentacja klasy Math
W C# nie ma operatora podnoszenia do potęgi. Realizuje to funkcja Math.Pow(). Podnoszenie do kwadratu możesz zrealizować prościej, jako iloczyn liczby przez samą siebie.
Wypisywanie liczby zmiennoprzecinkowej z określoną liczbą miejsc po przecinku (zaokrąglając) realizuje się - w przypadku stringów interpolowanych lub formatowanych - umieszczając dwukropek a następnie kod formatujący. Patrz: https://docs.microsoft.com/en-us/dotnet/standard/base-types/standard-numeric-format-strings. Można również zbudować własny system formatujący dane: https://docs.microsoft.com/en-us/dotnet/standard/base-types/custom-numeric-format-strings
Pole trójkąta dowolnego można obliczyć ze wzoru Herona.
Ustalając typ trójkąta, prawdopodobnie skorzystasz z twierdzenia Pitagorasa.
Jeśli uruchamiasz program na lokalnym komputerze z polskojęzyczną wersją Windows, powinieneś wprowadzać dane z przecinkami dziesiętnymi. Ten sam kod przesłany do oceny uruchamiany będzie w anglojęzycznym środowisku Linux, a więc dane testowe przekazywane są z kropkami dziesiętnymi. Zatem jeśli kod działa poprawnie u Ciebie (z przecinkami), będzie działał poprawnie podczas oceny (z kropkami). Jeśli jednak Ci to przeszkadza, możesz w kodzie wymusić działanie zgodne z lokalizacją en-US:
u góry kodu dołącz przestrzeń nazw: using System.Globalization;
jako pierwszą instrukcję w Main() zamieść: CultureInfo.CurrentCulture = CultureInfo.GetCultureInfo("en-US");
teraz, nawet na "polskim Windows" będziesz musiał wprowadzać dane z kropkami dziesiętnymi.
